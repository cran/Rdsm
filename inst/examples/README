
PLEASE NOTE:  

   Rdsm is intended mainly for applications of these kinds:

      *  parallel computation in which writing to shared memory is 
         infrequent and small in amount; examples here are Disc.R and
         KNN.R
      
      *  threads-like operations such as parallel I/O or 
         collaborative work among humans; examples here are WebProbe.R
         and Auction.R  
   
   Most of the other examples in this directory are mainly for
   illustrative purposes.

running the examples:

   Load the Rdsm library.  

   Then run as follows (expected results are given at the end of each
   file), say with 2 clients (some can be run with more):

      open 3 terminal windows, and run R in each
      in the first window, do
         srvr()  # starts server (do BEFORE init() below)
      in each of the other 2 windows, do
         source("yourfilename.R")
         init()  # establishes connection with server
         yourtestfunction()

quick start:

   As your first introduction to Rdsm, MatMult.R is suggested.  It has
   very extensive comments, designed to educate the Rdsm novice; read
   those first.

files:

   AllPossRegress.R:
   
      Runs regressions for all possible subsets of the predictor variables,
      finding the subset with maximum adjusted R-squared value.

      There is AllPossRegressSnow.R if you wish to compare to a snow
      version.

   Auction.R:

      Auction manager.

   Disc.R:

      Prediction of discrete time series.

      There is DiscSnow.R if you wish to compare to a snow version.

   KNN.R:
   
      Nearest neighbor prediction.  
      
      There is KNNSeq.R if you wish to compare performance to sequential
      computation.
   
   MatMult.R:
   
      Vanilla matrix multiplication.  See "quick start" above.
   
   QSort.R:
   
      Mini-quicksort.  Just for example, not efficient.
   
   Shear.R:
   
      Shearsort.  Just for example, not efficient.
   
   WebProbe.R:

      A Web data collection tool.

